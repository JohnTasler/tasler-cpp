#pragma once

#include <SDKDDKVer.h>
#define WIN32_LEAN_AND_MEAN
#include <winuser.h>

#include <format>
#include <string>
#include <string_view>
#include <utility>

using namespace std::literals;

namespace taz::ui::message_lookup
{
#define WM_UAHDESTROYWINDOW    0x0090
#define WM_UAHDRAWMENU         0x0091
#define WM_UAHDRAWMENUITEM     0x0092
#define WM_UAHINITMENU         0x0093
#define WM_UAHMEASUREMENUITEM  0x0094
#define WM_UAHNCPAINTMENUPOPUP 0x0095

	constexpr std::pair<uint16_t, std::wstring_view> message_map[] =
	{
		{ WM_NULL                            , L"WM_NULL"sv                           },
		{ WM_CREATE                          , L"WM_CREATE"sv,                        },
		{ WM_DESTROY                         , L"WM_DESTROY"sv                        },
		{ WM_MOVE                            , L"WM_MOVE"sv                           },
		{ WM_SIZE                            , L"WM_SIZE"sv                           },
		{ WM_ACTIVATE                        , L"WM_ACTIVATE"sv                       },
		{ WM_SETFOCUS                        , L"WM_SETFOCUS"sv                       },
		{ WM_KILLFOCUS                       , L"WM_KILLFOCUS"sv                      },
		{ WM_ENABLE                          , L"WM_ENABLE"sv                         },
		{ WM_SETREDRAW                       , L"WM_SETREDRAW"sv                      },
		{ WM_SETTEXT                         , L"WM_SETTEXT"sv                        },
		{ WM_GETTEXT                         , L"WM_GETTEXT"sv                        },
		{ WM_GETTEXTLENGTH                   , L"WM_GETTEXTLENGTH"sv                  },
		{ WM_PAINT                           , L"WM_PAINT"sv                          },
		{ WM_CLOSE                           , L"WM_CLOSE"sv                          },
		{ WM_QUERYENDSESSION                 , L"WM_QUERYENDSESSION"sv                },
		{ WM_QUIT                            , L"WM_QUIT"sv                           },
		{ WM_QUERYOPEN                       , L"WM_QUERYOPEN"sv                      },
		{ WM_ERASEBKGND                      , L"WM_ERASEBKGND"sv                     },
		{ WM_SYSCOLORCHANGE                  , L"WM_SYSCOLORCHANGE"sv                 },
		{ WM_ENDSESSION                      , L"WM_ENDSESSION"sv                     },
		{ WM_SHOWWINDOW                      , L"WM_SHOWWINDOW"sv                     },
		{ WM_SETTINGCHANGE                   , L"WM_SETTINGCHANGE"sv                  },
		{ WM_DEVMODECHANGE                   , L"WM_DEVMODECHANGE"sv                  },
		{ WM_ACTIVATEAPP                     , L"WM_ACTIVATEAPP"sv                    },
		{ WM_FONTCHANGE                      , L"WM_FONTCHANGE"sv                     },
		{ WM_TIMECHANGE                      , L"WM_TIMECHANGE"sv                     },
		{ WM_CANCELMODE                      , L"WM_CANCELMODE"sv                     },
		{ WM_SETCURSOR                       , L"WM_SETCURSOR"sv                      },
		{ WM_MOUSEACTIVATE                   , L"WM_MOUSEACTIVATE"sv                  },
		{ WM_CHILDACTIVATE                   , L"WM_CHILDACTIVATE"sv                  },
		{ WM_QUEUESYNC                       , L"WM_QUEUESYNC"sv                      },
		{ WM_GETMINMAXINFO                   , L"WM_GETMINMAXINFO"sv                  },
		{ WM_PAINTICON                       , L"WM_PAINTICON"sv                      },
		{ WM_ICONERASEBKGND                  , L"WM_ICONERASEBKGND"sv                 },
		{ WM_NEXTDLGCTL                      , L"WM_NEXTDLGCTL"sv                     },
		{ WM_SPOOLERSTATUS                   , L"WM_SPOOLERSTATUS"sv                  },
		{ WM_DRAWITEM                        , L"WM_DRAWITEM"sv                       },
		{ WM_MEASUREITEM                     , L"WM_MEASUREITEM"sv                    },
		{ WM_DELETEITEM                      , L"WM_DELETEITEM"sv                     },
		{ WM_VKEYTOITEM                      , L"WM_VKEYTOITEM"sv                     },
		{ WM_CHARTOITEM                      , L"WM_CHARTOITEM"sv                     },
		{ WM_SETFONT                         , L"WM_SETFONT"sv                        },
		{ WM_GETFONT                         , L"WM_GETFONT"sv                        },
		{ WM_SETHOTKEY                       , L"WM_SETHOTKEY"sv                      },
		{ WM_GETHOTKEY                       , L"WM_GETHOTKEY"sv                      },
		{ WM_QUERYDRAGICON                   , L"WM_QUERYDRAGICON"sv                  },
		{ WM_COMPAREITEM                     , L"WM_COMPAREITEM"sv                    },
		{ WM_GETOBJECT                       , L"WM_GETOBJECT"sv                      },
		{ WM_COMPACTING                      , L"WM_COMPACTING"sv                     },
		{ WM_COMMNOTIFY                      , L"WM_COMMNOTIFY"sv                     },
		{ WM_WINDOWPOSCHANGING               , L"WM_WINDOWPOSCHANGING"sv              },
		{ WM_WINDOWPOSCHANGED                , L"WM_WINDOWPOSCHANGED"sv               },
		{ WM_POWER                           , L"WM_POWER"sv                          },
		{ WM_COPYDATA                        , L"WM_COPYDATA"sv                       },
		{ WM_CANCELJOURNAL                   , L"WM_CANCELJOURNAL"sv                  },
		{ WM_NOTIFY                          , L"WM_NOTIFY"sv                         },
		{ WM_INPUTLANGCHANGEREQUEST          , L"WM_INPUTLANGCHANGEREQUEST"sv         },
		{ WM_INPUTLANGCHANGE                 , L"WM_INPUTLANGCHANGE"sv                },
		{ WM_TCARD                           , L"WM_TCARD"sv                          },
		{ WM_HELP                            , L"WM_HELP"sv                           },
		{ WM_USERCHANGED                     , L"WM_USERCHANGED"sv                    },
		{ WM_NOTIFYFORMAT                    , L"WM_NOTIFYFORMAT"sv                   },
		{ WM_CONTEXTMENU                     , L"WM_CONTEXTMENU"sv                    },
		{ WM_STYLECHANGING                   , L"WM_STYLECHANGING"sv                  },
		{ WM_STYLECHANGED                    , L"WM_STYLECHANGED"sv                   },
		{ WM_DISPLAYCHANGE                   , L"WM_DISPLAYCHANGE"sv                  },
		{ WM_GETICON                         , L"WM_GETICON"sv                        },
		{ WM_SETICON                         , L"WM_SETICON"sv                        },
		{ WM_NCCREATE                        , L"WM_NCCREATE"sv                       },
		{ WM_NCDESTROY                       , L"WM_NCDESTROY"sv                      },
		{ WM_NCCALCSIZE                      , L"WM_NCCALCSIZE"sv                     },
		{ WM_NCHITTEST                       , L"WM_NCHITTEST"sv                      },
		{ WM_NCPAINT                         , L"WM_NCPAINT"sv                        },
		{ WM_NCACTIVATE                      , L"WM_NCACTIVATE"sv                     },
		{ WM_GETDLGCODE                      , L"WM_GETDLGCODE"sv                     },
		{ WM_SYNCPAINT                       , L"WM_SYNCPAINT"sv                      },
		{ WM_UAHDESTROYWINDOW                , L"WM_UAHDESTROYWINDOW"sv               },
		{ WM_UAHDRAWMENU                     , L"WM_UAHDRAWMENU"sv                    },
		{ WM_UAHDRAWMENUITEM                 , L"WM_UAHDRAWMENUITEM"sv                },
		{ WM_UAHINITMENU                     , L"WM_UAHINITMENU"sv                    },
		{ WM_UAHMEASUREMENUITEM              , L"WM_UAHMEASUREMENUITEM"sv             },
		{ WM_UAHNCPAINTMENUPOPUP             , L"WM_UAHNCPAINTMENUPOPUP"sv            },
		{ WM_NCMOUSEMOVE                     , L"WM_NCMOUSEMOVE"sv                    },
		{ WM_NCLBUTTONDOWN                   , L"WM_NCLBUTTONDOWN"sv                  },
		{ WM_NCLBUTTONUP                     , L"WM_NCLBUTTONUP"sv                    },
		{ WM_NCLBUTTONDBLCLK                 , L"WM_NCLBUTTONDBLCLK"sv                },
		{ WM_NCRBUTTONDOWN                   , L"WM_NCRBUTTONDOWN"sv                  },
		{ WM_NCRBUTTONUP                     , L"WM_NCRBUTTONUP"sv                    },
		{ WM_NCRBUTTONDBLCLK                 , L"WM_NCRBUTTONDBLCLK"sv                },
		{ WM_NCMBUTTONDOWN                   , L"WM_NCMBUTTONDOWN"sv                  },
		{ WM_NCMBUTTONUP                     , L"WM_NCMBUTTONUP"sv                    },
		{ WM_NCMBUTTONDBLCLK                 , L"WM_NCMBUTTONDBLCLK"sv                },
		{ WM_NCXBUTTONDOWN                   , L"WM_NCXBUTTONDOWN"sv                  },
		{ WM_NCXBUTTONUP                     , L"WM_NCXBUTTONUP"sv                    },
		{ WM_NCXBUTTONDBLCLK                 , L"WM_NCXBUTTONDBLCLK"sv                },
		{ WM_INPUT_DEVICE_CHANGE             , L"WM_INPUT_DEVICE_CHANGE"sv            },
		{ WM_INPUT                           , L"WM_INPUT"sv                          },
		{ WM_KEYDOWN                         , L"WM_KEYDOWN"sv                        },
		{ WM_KEYUP                           , L"WM_KEYUP"sv                          },
		{ WM_CHAR                            , L"WM_CHAR"sv                           },
		{ WM_DEADCHAR                        , L"WM_DEADCHAR"sv                       },
		{ WM_SYSKEYDOWN                      , L"WM_SYSKEYDOWN"sv                     },
		{ WM_SYSKEYUP                        , L"WM_SYSKEYUP"sv                       },
		{ WM_SYSCHAR                         , L"WM_SYSCHAR"sv                        },
		{ WM_SYSDEADCHAR                     , L"WM_SYSDEADCHAR"sv                    },
		{ WM_UNICHAR                         , L"WM_UNICHAR"sv                        },
		{ WM_IME_STARTCOMPOSITION            , L"WM_IME_STARTCOMPOSITION"sv           },
		{ WM_IME_ENDCOMPOSITION              , L"WM_IME_ENDCOMPOSITION"sv             },
		{ WM_IME_COMPOSITION                 , L"WM_IME_COMPOSITION"sv                },
		{ WM_IME_KEYLAST                     , L"WM_IME_KEYLAST"sv                    },
		{ WM_INITDIALOG                      , L"WM_INITDIALOG"sv                     },
		{ WM_COMMAND                         , L"WM_COMMAND"sv                        },
		{ WM_SYSCOMMAND                      , L"WM_SYSCOMMAND"sv                     },
		{ WM_TIMER                           , L"WM_TIMER"sv                          },
		{ WM_HSCROLL                         , L"WM_HSCROLL"sv                        },
		{ WM_VSCROLL                         , L"WM_VSCROLL"sv                        },
		{ WM_INITMENU                        , L"WM_INITMENU"sv                       },
		{ WM_INITMENUPOPUP                   , L"WM_INITMENUPOPUP"sv                  },
		{ WM_GESTURE                         , L"WM_GESTURE"sv                        },
		{ WM_GESTURENOTIFY                   , L"WM_GESTURENOTIFY"sv                  },
		{ WM_MENUSELECT                      , L"WM_MENUSELECT"sv                     },
		{ WM_MENUCHAR                        , L"WM_MENUCHAR"sv                       },
		{ WM_ENTERIDLE                       , L"WM_ENTERIDLE"sv                      },
		{ WM_MENURBUTTONUP                   , L"WM_MENURBUTTONUP"sv                  },
		{ WM_MENUDRAG                        , L"WM_MENUDRAG"sv                       },
		{ WM_MENUGETOBJECT                   , L"WM_MENUGETOBJECT"sv                  },
		{ WM_UNINITMENUPOPUP                 , L"WM_UNINITMENUPOPUP"sv                },
		{ WM_MENUCOMMAND                     , L"WM_MENUCOMMAND"sv                    },
		{ WM_CHANGEUISTATE                   , L"WM_CHANGEUISTATE"sv                  },
		{ WM_UPDATEUISTATE                   , L"WM_UPDATEUISTATE"sv                  },
		{ WM_QUERYUISTATE                    , L"WM_QUERYUISTATE"sv                   },
		{ WM_CTLCOLORMSGBOX                  , L"WM_CTLCOLORMSGBOX"sv                 },
		{ WM_CTLCOLOREDIT                    , L"WM_CTLCOLOREDIT"sv                   },
		{ WM_CTLCOLORLISTBOX                 , L"WM_CTLCOLORLISTBOX"sv                },
		{ WM_CTLCOLORBTN                     , L"WM_CTLCOLORBTN"sv                    },
		{ WM_CTLCOLORDLG                     , L"WM_CTLCOLORDLG"sv                    },
		{ WM_CTLCOLORSCROLLBAR               , L"WM_CTLCOLORSCROLLBAR"sv              },
		{ WM_CTLCOLORSTATIC                  , L"WM_CTLCOLORSTATIC"sv                 },
		{ MN_GETHMENU                        , L"MN_GETHMENU"sv                       },
		{ WM_MOUSEMOVE                       , L"WM_MOUSEMOVE"sv                      },
		{ WM_LBUTTONDOWN                     , L"WM_LBUTTONDOWN"sv                    },
		{ WM_LBUTTONUP                       , L"WM_LBUTTONUP"sv                      },
		{ WM_LBUTTONDBLCLK                   , L"WM_LBUTTONDBLCLK"sv                  },
		{ WM_RBUTTONDOWN                     , L"WM_RBUTTONDOWN"sv                    },
		{ WM_RBUTTONUP                       , L"WM_RBUTTONUP"sv                      },
		{ WM_RBUTTONDBLCLK                   , L"WM_RBUTTONDBLCLK"sv                  },
		{ WM_MBUTTONDOWN                     , L"WM_MBUTTONDOWN"sv                    },
		{ WM_MBUTTONUP                       , L"WM_MBUTTONUP"sv                      },
		{ WM_MBUTTONDBLCLK                   , L"WM_MBUTTONDBLCLK"sv                  },
		{ WM_MOUSEWHEEL                      , L"WM_MOUSEWHEEL"sv                     },
		{ WM_XBUTTONDOWN                     , L"WM_XBUTTONDOWN"sv                    },
		{ WM_XBUTTONUP                       , L"WM_XBUTTONUP"sv                      },
		{ WM_MOUSELAST                       , L"WM_MOUSELAST"sv                      },
		{ WM_XBUTTONDBLCLK                   , L"WM_XBUTTONDBLCLK"sv                  },
		{ WM_MOUSEHWHEEL                     , L"WM_MOUSEHWHEEL"sv                    },
		{ WM_MOUSELAST                       , L"WM_MOUSELAST"sv                      },
		{ WM_PARENTNOTIFY                    , L"WM_PARENTNOTIFY"sv                   },
		{ WM_ENTERMENULOOP                   , L"WM_ENTERMENULOOP"sv                  },
		{ WM_EXITMENULOOP                    , L"WM_EXITMENULOOP"sv                   },
		{ WM_NEXTMENU                        , L"WM_NEXTMENU"sv                       },
		{ WM_SIZING                          , L"WM_SIZING"sv                         },
		{ WM_CAPTURECHANGED                  , L"WM_CAPTURECHANGED"sv                 },
		{ WM_MOVING                          , L"WM_MOVING"sv                         },
		{ WM_POWERBROADCAST                  , L"WM_POWERBROADCAST"sv                 },
		{ WM_MDICREATE                       , L"WM_MDICREATE"sv                      },
		{ WM_MDIDESTROY                      , L"WM_MDIDESTROY"sv                     },
		{ WM_MDIACTIVATE                     , L"WM_MDIACTIVATE"sv                    },
		{ WM_MDIRESTORE                      , L"WM_MDIRESTORE"sv                     },
		{ WM_MDINEXT                         , L"WM_MDINEXT"sv                        },
		{ WM_MDIMAXIMIZE                     , L"WM_MDIMAXIMIZE"sv                    },
		{ WM_MDITILE                         , L"WM_MDITILE"sv                        },
		{ WM_MDICASCADE                      , L"WM_MDICASCADE"sv                     },
		{ WM_MDIICONARRANGE                  , L"WM_MDIICONARRANGE"sv                 },
		{ WM_MDIGETACTIVE                    , L"WM_MDIGETACTIVE"sv                   },
		{ WM_MDISETMENU                      , L"WM_MDISETMENU"sv                     },
		{ WM_ENTERSIZEMOVE                   , L"WM_ENTERSIZEMOVE"sv                  },
		{ WM_EXITSIZEMOVE                    , L"WM_EXITSIZEMOVE"sv                   },
		{ WM_DROPFILES                       , L"WM_DROPFILES"sv                      },
		{ WM_MDIREFRESHMENU                  , L"WM_MDIREFRESHMENU"sv                 },
		{ WM_POINTERDEVICECHANGE             , L"WM_POINTERDEVICECHANGE"sv            },
		{ WM_POINTERDEVICEINRANGE            , L"WM_POINTERDEVICEINRANGE"sv           },
		{ WM_POINTERDEVICEOUTOFRANGE         , L"WM_POINTERDEVICEOUTOFRANGE"sv        },
		{ WM_TOUCH                           , L"WM_TOUCH"sv                          },
		{ WM_NCPOINTERUPDATE                 , L"WM_NCPOINTERUPDATE"sv                },
		{ WM_NCPOINTERDOWN                   , L"WM_NCPOINTERDOWN"sv                  },
		{ WM_NCPOINTERUP                     , L"WM_NCPOINTERUP"sv                    },
		{ WM_POINTERUPDATE                   , L"WM_POINTERUPDATE"sv                  },
		{ WM_POINTERDOWN                     , L"WM_POINTERDOWN"sv                    },
		{ WM_POINTERUP                       , L"WM_POINTERUP"sv                      },
		{ WM_POINTERENTER                    , L"WM_POINTERENTER"sv                   },
		{ WM_POINTERLEAVE                    , L"WM_POINTERLEAVE"sv                   },
		{ WM_POINTERACTIVATE                 , L"WM_POINTERACTIVATE"sv                },
		{ WM_POINTERCAPTURECHANGED           , L"WM_POINTERCAPTURECHANGED"sv          },
		{ WM_TOUCHHITTESTING                 , L"WM_TOUCHHITTESTING"sv                },
		{ WM_POINTERWHEEL                    , L"WM_POINTERWHEEL"sv                   },
		{ WM_POINTERHWHEEL                   , L"WM_POINTERHWHEEL"sv                  },
		{ DM_POINTERHITTEST                  , L"DM_POINTERHITTEST"sv                 },
		{ WM_POINTERROUTEDTO                 , L"WM_POINTERROUTEDTO"sv                },
		{ WM_POINTERROUTEDAWAY               , L"WM_POINTERROUTEDAWAY"sv              },
		{ WM_POINTERROUTEDRELEASED           , L"WM_POINTERROUTEDRELEASED"sv          },
		{ WM_IME_SETCONTEXT                  , L"WM_IME_SETCONTEXT"sv                 },
		{ WM_IME_NOTIFY                      , L"WM_IME_NOTIFY"sv                     },
		{ WM_IME_CONTROL                     , L"WM_IME_CONTROL"sv                    },
		{ WM_IME_COMPOSITIONFULL             , L"WM_IME_COMPOSITIONFULL"sv            },
		{ WM_IME_SELECT                      , L"WM_IME_SELECT"sv                     },
		{ WM_IME_CHAR                        , L"WM_IME_CHAR"sv                       },
		{ WM_IME_REQUEST                     , L"WM_IME_REQUEST"sv                    },
		{ WM_IME_KEYDOWN                     , L"WM_IME_KEYDOWN"sv                    },
		{ WM_IME_KEYUP                       , L"WM_IME_KEYUP"sv                      },
		{ WM_NCMOUSEHOVER                    , L"WM_NCMOUSEHOVER"sv                   },
		{ WM_MOUSEHOVER                      , L"WM_MOUSEHOVER"sv                     },
		{ WM_NCMOUSELEAVE                    , L"WM_NCMOUSELEAVE"sv                   },
		{ WM_MOUSELEAVE                      , L"WM_MOUSELEAVE"sv                     },
		{ WM_WTSSESSION_CHANGE               , L"WM_WTSSESSION_CHANGE"sv              },
		{ WM_TABLET_FIRST                    , L"WM_TABLET_FIRST"sv                   },
		{ WM_TABLET_LAST                     , L"WM_TABLET_LAST"sv                    },
		{ WM_DPICHANGED                      , L"WM_DPICHANGED"sv                     },
		{ WM_DPICHANGED_BEFOREPARENT         , L"WM_DPICHANGED_BEFOREPARENT"sv        },
		{ WM_DPICHANGED_AFTERPARENT          , L"WM_DPICHANGED_AFTERPARENT"sv         },
		{ WM_GETDPISCALEDSIZE                , L"WM_GETDPISCALEDSIZE"sv               },
		{ WM_CUT                             , L"WM_CUT"sv                            },
		{ WM_COPY                            , L"WM_COPY"sv                           },
		{ WM_PASTE                           , L"WM_PASTE"sv                          },
		{ WM_CLEAR                           , L"WM_CLEAR"sv                          },
		{ WM_UNDO                            , L"WM_UNDO"sv                           },
		{ WM_RENDERFORMAT                    , L"WM_RENDERFORMAT"sv                   },
		{ WM_RENDERALLFORMATS                , L"WM_RENDERALLFORMATS"sv               },
		{ WM_DESTROYCLIPBOARD                , L"WM_DESTROYCLIPBOARD"sv               },
		{ WM_DRAWCLIPBOARD                   , L"WM_DRAWCLIPBOARD"sv                  },
		{ WM_PAINTCLIPBOARD                  , L"WM_PAINTCLIPBOARD"sv                 },
		{ WM_VSCROLLCLIPBOARD                , L"WM_VSCROLLCLIPBOARD"sv               },
		{ WM_SIZECLIPBOARD                   , L"WM_SIZECLIPBOARD"sv                  },
		{ WM_ASKCBFORMATNAME                 , L"WM_ASKCBFORMATNAME"sv                },
		{ WM_CHANGECBCHAIN                   , L"WM_CHANGECBCHAIN"sv                  },
		{ WM_HSCROLLCLIPBOARD                , L"WM_HSCROLLCLIPBOARD"sv               },
		{ WM_QUERYNEWPALETTE                 , L"WM_QUERYNEWPALETTE"sv                },
		{ WM_PALETTEISCHANGING               , L"WM_PALETTEISCHANGING"sv              },
		{ WM_PALETTECHANGED                  , L"WM_PALETTECHANGED"sv                 },
		{ WM_HOTKEY                          , L"WM_HOTKEY"sv                         },
		{ WM_PRINT                           , L"WM_PRINT"sv                          },
		{ WM_PRINTCLIENT                     , L"WM_PRINTCLIENT"sv                    },
		{ WM_APPCOMMAND                      , L"WM_APPCOMMAND"sv                     },
		{ WM_THEMECHANGED                    , L"WM_THEMECHANGED"sv                   },
		{ WM_CLIPBOARDUPDATE                 , L"WM_CLIPBOARDUPDATE"sv                },
		{ WM_DWMCOMPOSITIONCHANGED           , L"WM_DWMCOMPOSITIONCHANGED"sv          },
		{ WM_DWMNCRENDERINGCHANGED           , L"WM_DWMNCRENDERINGCHANGED"sv          },
		{ WM_DWMCOLORIZATIONCOLORCHANGED     , L"WM_DWMCOLORIZATIONCOLORCHANGED"sv    },
		{ WM_DWMWINDOWMAXIMIZEDCHANGE        , L"WM_DWMWINDOWMAXIMIZEDCHANGE"sv       },
		{ WM_DWMSENDICONICTHUMBNAIL          , L"WM_DWMSENDICONICTHUMBNAIL"sv         },
		{ WM_DWMSENDICONICLIVEPREVIEWBITMAP  , L"WM_DWMSENDICONICLIVEPREVIEWBITMAP"sv },
		{ WM_GETTITLEBARINFOEX               , L"WM_GETTITLEBARINFOEX"sv              },
		{ WM_HANDHELDFIRST                   , L"WM_HANDHELDFIRST"sv                  },
		{ WM_HANDHELDLAST                    , L"WM_HANDHELDLAST"sv                   },
		{ WM_AFXFIRST                        , L"WM_AFXFIRST"sv                       },
		{ WM_AFXLAST                         , L"WM_AFXLAST"sv                        },
		{ WM_PENWINFIRST                     , L"WM_PENWINFIRST"sv                    },
		{ WM_PENWINLAST                      , L"WM_PENWINLAST"sv                     },
		{ WM_USER                            , L"WM_USER"sv                           },
		{ WM_APP                             , L"WM_APP"sv                            },
	};

	inline std::wstring_view get_name(uint16_t message)
	{
		thread_local std::wstring messageString;

		// Use a binary search for great performance, but array must remain in order by message ID
		auto lower_bound = std::lower_bound(std::begin(message_map), std::end(message_map), message,
			[](const auto& pair, uint16_t msg) { return pair.first < msg; });
		if (lower_bound != std::end(message_map) && lower_bound->first == message)
			return lower_bound->second;

		if (message >= WM_USER && message <= WM_APP)
			return messageString = std::format(L"WM_USER + {} (0x{:04X})"sv, message - WM_USER, message);

		if (message >= WM_HANDHELDFIRST && message <= WM_HANDHELDLAST)
			return messageString = std::format(L"WM_HANDHELDFIRST + {} (0x{:04X})"sv, message - WM_HANDHELDFIRST, message);

		if (message >= WM_AFXFIRST && message <= WM_AFXLAST)
			return messageString = std::format(L"WM_AFXFIRST + {} (0x{:04X})"sv, message - WM_AFXFIRST, message);

		if (message >= WM_PENWINFIRST && message <= WM_PENWINLAST)
			return messageString = std::format(L"WM_PENWINFIRST + {} (0x{:04X})"sv, message - WM_PENWINFIRST, message);

		if (message >= WM_TABLET_FIRST && message <= WM_TABLET_LAST)
			return messageString = std::format(L"WM_TABLET_FIRST + {} (0x{:04X})"sv, message - WM_TABLET_FIRST, message);

		if (message >= WM_APP)
			return messageString = std::format(L"WM_APP + {} (0x{:04X})"sv, message - WM_APP, message);

		return messageString = std::format(L"Unknown message (0x{:04X})"sv, message);
	}
}
